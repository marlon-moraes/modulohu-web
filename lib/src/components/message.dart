// üê¶ Flutter imports:
import 'package:flutter/material.dart';

/// Uma classe que representa uma mensagem a ser exibida.
///
/// A classe [Message] √© usada para criar mensagens que podem ser exibidas
/// na interface do usu√°rio, como notifica√ß√µes ou alertas. Ela permite
/// personalizar o texto da mensagem, o estado de sucesso e a dura√ß√£o
/// da exibi√ß√£o.
///
/// ## Propriedades:
/// - [message]: O texto da mensagem a ser exibida.
/// - [success]: Um booleano que indica se a mensagem √© de sucesso.
/// - [duration]: A dura√ß√£o em segundos que a mensagem ser√° exibida. O padr√£o √© 4 segundos.
///
/// ## Construtor:
/// - [Message]: Cria uma nova inst√¢ncia da classe [Message] com o texto,
///   o estado de sucesso e a dura√ß√£o especificados.
///
/// ## M√©todos:
/// - [inputMsg]: Exibe a mensagem usando um [SnackBar] no contexto fornecido.
///
/// ## Exemplo:
/// ```dart
/// Message('Opera√ß√£o realizada com sucesso!', true).inputMsg(context);
/// ```
///
/// ## Uso:
/// Esta classe pode ser usada em qualquer parte da aplica√ß√£o onde mensagens
/// de feedback s√£o necess√°rias. Ela fornece uma maneira simples de exibir
/// notifica√ß√µes ao usu√°rio.
class Message {
  final String message;
  final bool success;
  final int duration;

  Message(this.message, this.success, {this.duration = 4});

  void inputMsg(BuildContext context) {
    final theme = Theme.of(context);

    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text(message, style: TextStyle(color: theme.colorScheme.onTertiary), textAlign: TextAlign.center),
        backgroundColor: success ? theme.colorScheme.tertiary : theme.colorScheme.error,
        duration: Duration(seconds: duration),
      ),
    );
  }
}
